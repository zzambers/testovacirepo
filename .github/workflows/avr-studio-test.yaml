name: "avr-studio-test"

on:
  push:
    branches:
      - "test-avr-studio"

jobs:
  build-variyo:
    name: Build VariYO
    runs-on: "windows-2019"
    env:
      ARDUINO_VER: 1.8.13
      ATMEL_VER: 7.0.2389
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          repository: Jenatko/VariYO
      - name: Setup msys
        uses: msys2/setup-msys2@v2
        with:
          release: false
          install: psmisc unzip
      - name: Installers cache
        uses: actions/cache@v2
        with:
          path: |
            ${{ runner.temp }}/as-installer-${{ env.ARDUINO_VER }}-full.exe
            ${{ runner.temp }}/arduino-${{ env.ATMEL_VER }}-windows.zip
            C:/Users/runneradmin/AppData/Local/Arduino15/cache
          key: ${{ env.ATMEL_VER }}-${{ env.ARDUINO_VER }}
      - name: Download installers
        shell: msys2 {0}
        working-directory: ${{ runner.temp }}
        timeout-minutes: 30
        run: |
          set -eux
          if ! [ -e as-installer-${ATMEL_VER}-full.exe ] ; then
              curl -L -f -o as-installer-${ATMEL_VER}-full.exe http://studio.download.atmel.com/${ATMEL_VER}/as-installer-${ATMEL_VER}-full.exe
          fi
          if ! [ -e arduino-${ARDUINO_VER}-windows.zip ] ; then
              curl -L -f -o arduino-${ARDUINO_VER}-windows.zip https://downloads.arduino.cc/arduino-${ARDUINO_VER}-windows.zip
          fi
      - name: Install arduino
        shell: msys2 {0}
        working-directory: ${{ runner.temp }}
        timeout-minutes: 30
        run: |
          set -eux
          PF="C:\\Program Files (x86)"
          unzip -q -d "${PF}" arduino-${ARDUINO_VER}-windows.zip
          mv "${PF}\\arduino-${ARDUINO_VER}" "${PF}\\Arduino"
          #{ "${PF}\\Arduino\\arduino" --install-boards arduino:samd || touch .fail ; } 2>&1 | tee arduino-boards.log
          #! [ -f .fail ]
      - name: Install Atmel Strudio
        shell: msys2 {0}
        working-directory: ${{ runner.temp }}
        timeout-minutes: 30
        run: |
          set -eux
          ./as-installer-${ATMEL_VER}-full.exe -passive -norestart -log install.log &
          pid=$!
          sleep 5
          ps -W
          while kill -0 $pid ; do
              MSYS2_ARG_CONV_EXCL='/im;/f' taskkill /f /im drvinst.exe || true
              sleep 5
          done
          wait $pid || true
          ps -W
          [ -f install.log ] || exit 1
          [ -d "C:\\Program Files (x86)\\Atmel\\Studio\\7.0\\" ] || exit 1
      - name: Install Atmel Strudio Log
        if: ${{ always() }}
        shell: msys2 {0}
        working-directory: ${{ runner.temp }}
        run: |
          [ -f install.log ] && cat install.log
      - name: Build
        shell: msys2 {0}
        timeout-minutes: 30
        run: |
          set -x
          # See:
          # https://microchipsupport.force.com/s/article/Building-an-Atmel-Studio-solution-via-commandline
          MSYS2_ARG_CONV_EXCL='/build;/out' "C:\\Program Files (x86)\\Atmel\\Studio\\7.0\\AtmelStudio.exe" VarioSW_as.atsln /build debug /out build.log
      - name: Build Log
        if: ${{ always() }}
        shell: msys2 {0}
        run: |
          [ -f build.log ] && cat build.log
